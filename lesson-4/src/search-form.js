"use strict";
exports.__esModule = true;
exports.renderSearchFormBlock = void 0;
var lib_js_1 = require("./lib.js");
var index_js_1 = require("./API/index.js");
var search_results_js_1 = require("./search-results.js");
var ONE_MONTH = 1;
var TWO_MONTH = 2;
function renderSearchFormBlock(checkin, checkout) {
    var formatDate = function (date) {
        return (date.getFullYear() +
            "-" +
            ("0" + (date.getMonth() + 1)).slice(-2) +
            "-" +
            ("0" + date.getDate()).slice(-2));
    };
    var userCheckin = new Date(checkin);
    var formatUserCheckin = formatDate(userCheckin);
    var userCheckout = new Date(checkout);
    var formatUserCheckout = formatDate(userCheckout);
    var today = new Date();
    var minCheckin = formatDate(today);
    var minCheckout = new Date(today.setDate(today.getDate() + 1));
    var minCheckoutDay = formatDate(minCheckout);
    var maxCheckMonth = new Date(today.setMonth(today.getMonth() + 1));
    var lastDayMaxCheckMonth = new Date(maxCheckMonth.getFullYear(), maxCheckMonth.getMonth() + 1, 0);
    var maxCheck = formatDate(lastDayMaxCheckMonth);
    var getFormValue = function (e) {
        e.preventDefault();
        var dataValue = {
            city: document.getElementById("city").value,
            checkIn: document.getElementById("check-in-date")
                .value,
            checkOut: document.getElementById("check-out-date")
                .value,
            price: document.getElementById("max-price").value
        };
        console.log(dataValue);
        funcSearch(dataValue);
    };
    var funcSearch = function (data) {
        console.log(data);
    };
    (0, lib_js_1.renderBlock)("search-form-block", "\n    <form>\n      <fieldset class=\"search-filedset\">\n        <div class=\"row\">\n          <div>\n            <label for=\"city\">\u0413\u043E\u0440\u043E\u0434</label>\n            <input id=\"city\" type=\"text\" disabled value=\"\u0421\u0430\u043D\u043A\u0442-\u041F\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433\" />\n            <input type=\"hidden\" disabled value=\"59.9386,30.3141\" />\n          </div>\n          <!--<div class=\"providers\">\n            <label><input type=\"checkbox\" name=\"provider\" value=\"homy\" checked /> Homy</label>\n            <label><input type=\"checkbox\" name=\"provider\" value=\"flat-rent\" checked /> FlatRent</label>\n          </div>--!>\n        </div>\n        <div class=\"row\">\n        <form name=\"check\">\n          <div>\n            <label for=\"check-in-date\">\u0414\u0430\u0442\u0430 \u0437\u0430\u0435\u0437\u0434\u0430</label>\n            <input id=\"check-in-date\" type=\"date\" value=".concat(formatUserCheckin, " min=").concat(minCheckin, " max=").concat(maxCheck, " name=\"checkin\" />\n          </div>\n          <div>\n            <label for=\"check-out-date\">\u0414\u0430\u0442\u0430 \u0432\u044B\u0435\u0437\u0434\u0430</label>\n            <input id=\"check-out-date\" type=\"date\" value=").concat(formatUserCheckout, " min=").concat(minCheckoutDay, " max=").concat(maxCheck, " name=\"checkout\" />\n          </div>\n          </form>\n          <div>\n            <label for=\"max-price\">\u041C\u0430\u043A\u0441. \u0446\u0435\u043D\u0430 \u0441\u0443\u0442\u043E\u043A</label>\n            <input id=\"max-price\" type=\"number\" value=\"\" name=\"price\" class=\"max-price\"/>\n          </div>\n          <div>\n            <div><button id=\"btn-search\">\u041D\u0430\u0439\u0442\u0438</button></div>\n          </div>\n        </div>\n      </fieldset>\n    </form>\n    "));
    var form = document.querySelector("form");
    form.addEventListener("submit", getFormValue);
    var btnSearch = document.getElementById("btn-search");
    btnSearch.addEventListener("click", function (event) {
        event.preventDefault();
        fetchPlases();
    });
    function fetchPlases() {
        var coordinates = "59.9386,30.3141";
        var checkInDate = checkin;
        var checkOutDate = checkout;
        var maxPrice = document.getElementById('max-price');
        maxPrice.addEventListener('change', function (event) {
            //  const valueInput = event.target.value
            // console.log(value)
        });
        fetch(index_js_1.baseUrl +
            "/places?coordinates=".concat(coordinates, "&checkInDate=").concat(checkInDate, "&checkOutDate=").concat(checkOutDate, "&maxPrice=10000"))
            .then(function (response) {
            // if (!response.ok) {
            //   throw new Error(`Error:${response.status}`);
            // }
            return response.json();
        })
            .then(function (data) {
            console.log(data);
            (0, search_results_js_1.renderSearchResultsBlock)(data);
        });
    }
}
exports.renderSearchFormBlock = renderSearchFormBlock;
//# sourceMappingURL=data:application/json;base64,